# Generated by Django 5.1.7 on 2025-06-24 15:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('user', 'User'), ('seller', 'Seller'), ('admin', 'Admin')], default='user', max_length=10)),
                ('user_profile', models.ImageField(default='null', upload_to='user_images', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'svg', 'webp'])])),
                ('seller_profile', models.ImageField(default='null', upload_to='seller_images')),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Only numeric characters are allowed.')], verbose_name='Mobile Number')),
                ('address', models.TextField(max_length=150, verbose_name='Address')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z][a-zA-Z0-9]*$', 'Username only starts with alphabetic characters')])),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+$', 'Only alphabetic characters are allowed.')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+$', 'Only alphabetic characters are allowed.')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/')),
                ('product_name', models.CharField(max_length=25)),
                ('colour', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('delivery_charge', models.IntegerField()),
                ('stock', models.PositiveIntegerField()),
                ('seller', models.ForeignKey(limit_choices_to={'user_type': 'seller'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('quantity', models.IntegerField()),
                ('price', models.IntegerField()),
                ('door_no', models.CharField(max_length=10)),
                ('street_name', models.CharField(max_length=20)),
                ('city_name', models.CharField(max_length=20)),
                ('zip_code', models.IntegerField(blank=True, null=True)),
                ('mobile', models.IntegerField(blank=True, null=True)),
                ('district', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('country', models.CharField(default='India', max_length=20)),
                ('payment_method', models.CharField(choices=[('Cash on Delivery', 'Cash on Delivery'), ('Credit or Debit', 'Credit or Debit'), ('UPI Payment', 'UPI Payment')], max_length=20)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'user'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.products')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'user'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.products')),
            ],
        ),
    ]
